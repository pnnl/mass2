-*- text -*--------------------------------------------------
file: README
General info and compilation instructions for MASS2
-------------------------------------------------------------
-------------------------------------------------------------
Battelle Memorial Institute
Pacific Northwest Laboratory
-------------------------------------------------------------
-------------------------------------------------------------
Created November 17, 1999 by William A. Perkins
Last Change: Tue Apr  1 14:18:47 2003 by William A. Perkins <perk@leechong.pnl.gov>
-------------------------------------------------------------

-------------------------------------------------------------
NetCDF
-------------------------------------------------------------

MASS2 requires version 3.4 of the NetCDF library.  Some initial tests
with the 3.5 version were veerrry slow, so the older version must be
used. 

On Intel Linux, one has to be careful how NetCDF is compiled.  With
the original 3.4 distribution, there is really only one way to go.
First, compile and install NetCDF with g77.  Then, use the Absoft
compiler with these flags:

    -B108 -YEXT_NAMES=LCS -YCFRL=1

If you want to use another compiler, then NetCDF must be compiled
differently.  Unpack the 3.4 distribution and replace 
src/fortran/cfortran.h with the cfortran.h from the 3.5
distribution. Configure and compile NetCDF specifying the following 

    FC=g77
    FFLAGS=-fno-second-underscore
    CPPFLAGS=-DNDEBUG -DpgiFortran

When the NetCDF library is built this way, it can be linked using any
of the available compilers.  The Absoft compiler flags need to be
changed to

    -YEXT_SFX=_ -YEXT_NAMES=LCS -YCFRL=1

-------------------------------------------------------------
compilation via GNU autotools
-------------------------------------------------------------

MASS2 is configured and compiled using the GNU autotools.  If you
check MASS2 out of CVS, you must build the configure script on a
system that has the GNU autotools installed (Linux systems usually
do).  The configure script is built by the command

    sh bootstrap.sh

You do not have to do this on the machine you which to compile for;
the only requirement is that autotools are installed (autoconf and
automake).  

To compile MASS2, the configure script must be run on the architecture
you wish to run MASS2.  The following architectures and compilers are
supported: 

    * Silicon Graphics with SGI Fortran 90 compiler (f90),
    * OSF4 on DEC/Compaq/HP Alpha with the DEC/Compaq/HP Fortran 90
      compiler (f90, f95), 
    * Linux on DEC/Compaq/HP Alpha with the DEC/Compaq/HP Fortran 90
      compiler (fort),
    * Linux on Intel with any of 
        * Absoft Fortran 95/90 (version 7.5 or above) compiler (f90, f95),
        * Intel Fortran (version 7.0 or above) compiler (ifc) , or
        * Lahey Fortran 95 Pro (version 6.1 or above) compiler (lf95).

If you try to configure without when not working with one of these
architectures, the configure script will crash with an error.  If
however, you set the F77 environment variable to the compiler you want
(or use --with-f90, see below) configure will try to make it work with
some (probably wrong) compilation flags.  You can also use the F77
environment variable (or --with-f90) to choose the compiler when there
are multiple choices.

The configure script has several options.  To get a complete list,
issue the command

    configure --help

The options specific to the compilation of MASS2 are as follows:

    --with-f90=cmd

        Use "cmd" as the Fortran 90 compiler command.

    --enable-optimize

        Optimization is turned on using flags appropriate to the
        compiler/architecture.

    --enable-debug (default)

        Debugging flags are included by default.  If --enable-optimize
        is specified, the debugging flags are not included.  Use
        --enable-debug to include debugging with optimization.

    --enable-profile

        Turn on profiling.

    --with-netcdf=dir

        NetCDF is required for compilation.  This option specifies
        where NetCDF libraries and headers are located.  The specified
        directory is expected to have include and lib subdirectories.

A typical configure 

    configure --with-netcdf=/home/perk/Projects/ParallelMASS2/src/netcdf-3.4 --enable-optimize --enable-profile

-------------------------------------------------------------
distributing MASS2
-------------------------------------------------------------
If the MASS2 source code is to be sent to someone, or it is to be
transferred to and compiled on a machine without GNU autotools, one
can generate a "distribution" file automatically with make.  This is
to ensure all necessary files are included when the code is
transferred.  

You must prepare a MASS2 distribution on a machine that has GNU
autotools installed.  Once MASS2 is checked out of CVS, build the
configure scripts with

    sh bootstrap.sh

Then configure MASS2 appropriately, as discussed above, and make the
distribution file with

    make dist

This will make a gzip'd tar file named something like
mass2-0.30.tar.gz.  It contains the MASS2 distribution and should have
all the necessary files to build MASS2. 

-------------------------------------------------------------
old compilation  -- no longer maintained
-------------------------------------------------------------

By default all of the makefiles will produce an executable called
`mass2_v027'.  This can be changed by setting the `TARGET' macro on
the command line.  Some suggested `TARGET's are shown below (using the
condor codes for OpSys and Arch). Currently the following platforms
are supported

    IRIX:   

        make -f makefile [DEBUG=-g [-O]] [TARGET=mass2.IRIX65.SGI]

    DEC OSF/1:      

        make -f makefile.dec F90=f95 [DEBUG=-g [-O]] [TARGET=mass2_v025.dec]

        Compile on tophet.  Can run on both OSF/1 and Linux alpha.

    Linux i386:     

        make -f makefile.linux [DEBUG=-g] [TARGET=mass2.LINUX.INTEL]

        This is for the Absoft Pro Fortran 90/95 compiler, currently
        version 7.5. 

        make -f makefile.intel [DEBUG=-g] [TARGET=mass2.LINUX.INTEL]

        This is for the Intel Fortran 90 compiler, version 6.0.1. 

        make -f makefile.lahey [DEBUG=-g] [TARGET=mass2.LINUX.INTEL]

        This is for the Lahey Fortran 95 compiler, version 6.10a

    Linux alpha:    

        make -f makefile.dec [DEBUG=-g [-O]] [TARGET=mass2.LINUX.ALPHA]

        This uses the DEC Fortran 90 compiler for Linux.  This is
        installed only on gehenna. 

    Sun Solaris SPARC:

        make -f makefile.sun [DEBUG=-g] [TARGET=mass2.SOLARIS27.SUN4u]

        This is for the Sun Fortran 90 compiler.  This can be found on
        artemis. 

    Windows:        

        nmake /f mass2_v025.mak  "CFG=mass2_v025 - Win32 Release"
        nmake /f mass2_v025.mak  "CFG=mass2_v025 - Win32 Debug"

        Compile on r101243.