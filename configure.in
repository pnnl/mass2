#! /bin/sh
# -------------------------------------------------------------
# file: configure.in
# -------------------------------------------------------------
# -------------------------------------------------------------
# Battelle Memorial Institute
# Pacific Northwest Laboratory
# -------------------------------------------------------------
# -------------------------------------------------------------
# Created March 25, 2003 by William A. Perkins
# Last Change: Fri Apr  4 09:45:25 2003 by William A. Perkins <perk@leechong.pnl.gov>
# -------------------------------------------------------------

# -------------------------------------------------------------
# Initialization
# -------------------------------------------------------------
AC_INIT(mass2.f90)
AM_INIT_AUTOMAKE(mass2,0.30)
AC_CANONICAL_HOST()

# -------------------------------------------------------------
# Stuff to include subdirectories
# -------------------------------------------------------------
SUBDIRS="time_series util"
AC_SUBST(SUBDIRS)

# -------------------------------------------------------------
# check some command line options
# -------------------------------------------------------------

                                # select a compiler

AC_ARG_WITH(f90,
    [  --with-f90=cmd              specify the Fortran 90 compiler],
    F90="$withval")

                                # compilation options

dooptimize=""
AC_ARG_ENABLE(optimize,
    [  --enable-optimize            turn on optimization],
    dooptimize=true,
    dooptimize="")

if test -n "$dooptimize" ; then
    dodebug=""
else
    dodebug=true
fi
AC_ARG_ENABLE(debug,
    [  --enable-debug               turn on debugging (use with --enable-optimize)],
    dodebug=true)

AC_ARG_ENABLE(profile,
    [  --enable-profile             turn on profiling],
    doprofile=true,
    doprofile="")

                                # NetCDF location: set NETCDFDIR or
                                # --with-netcdf=

if test -z "$NETCDFDIR"; then
    NETCDFDIR=/usr
fi
AC_ARG_WITH(netcdf,
    [  --with-netcdf=dir            specify the location of NetCDF libraries],
    NETCDFDIR="$withval")

                                # CGNS location: set CGNSDIR or --with-cgns=

if test -z "$CGNSDIR"; then
    CGNSDIR=/usr/unsupported/CGNSLib
fi
AC_ARG_WITH(cgns,
    [  --with-cgns=dir              specify the location of CGNS libraries],
    CGNSDIR="$withval")

AC_ARG_WITH(cgns-lib,
    [  --with-cgns-lib=name         name of CGNS library: libcgns.a = cgns],
    CGNSLIBNAME="$withval")

# -------------------------------------------------------------
# Checks for Programs we need
# -------------------------------------------------------------
AC_PROG_F90()
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_LANG_FORTRAN77


if test -n "$dooptimize"; then
    F90FLAGS="$F90FLAGS $F90OPTIMIZE"
fi
if test -n "$dodebug"; then
    F90FLAGS="$F90FLAGS $F90DEBUG"
fi
if test -n "$doprofile"; then
    F90FLAGS="$F90FLAGS $F90PROFILE"
fi

# -------------------------------------------------------------
# assemble compiler flags and test
# -------------------------------------------------------------
F90FLAGS="$F90FLAGS -I$NETCDFDIR/include"
F90LDFLAGS="$F90LDFLAGS -L$NETCDFDIR/lib"
F90LIBS="$F90LIBS -lnetcdf"

AC_CHECK_FILE($NETCDFDIR/include/netcdf.inc, , AC_MSG_ERROR(Cannot find required header netcdf.inc))

                                # some of these names for the CGNS
                                # library are site specific
if test -z "$CGNSLIBNAME"; then
    case $host in
        i?86*linux*)
            CGNSLIBNAME=cgns.linux
            ;;
        alpha*linux*|alphaev*-dec-osf*)
            CGNSLIBNAME=cgns.alinux
            ;;
        mips-*-irix*)
            CGNSLIBNAME=cgns.mips4_n32
            ;;
        *)
            CGNSLIBNAME=cgns
    esac
fi

F90FLAGS="$F90FLAGS -I$CGNSDIR"
F90LDFLAGS="$F90LDFLAGS -L$CGNSDIR/lib"
F90LIBS="$F90LIBS -l$CGNSLIBNAME"

AC_CHECK_FILE($CGNSDIR/cgnslib_f.h, , 
              AC_MSG_ERROR(Cannot find required header cgnslib_f.h))

FFLAGS="$FFLAGS $F90FLAGS ${F90MODPATH}time_series"
LDFLAGS="$LDFLAGS $F90LDFLAGS"
LIBS="$LIBS $F90LIBS"

# AC_PROG_F77_WORKS
AC_CHECK_LIB(netcdf, nf_create, ,
             AC_MSG_ERROR(Cannot link to NetCDF library))
AC_CHECK_LIB($CGNSLIBNAME, cg_open_f, ,
             AC_MSG_ERROR(Cannot link to CGNS library))

AC_CONFIG_SUBDIRS(time_series)
AC_OUTPUT(Makefile util/Makefile util/cart_grid/Makefile)

