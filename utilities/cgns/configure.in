dnl Process this file with autoconf to produce a configure script.
AC_INIT(cgnsfile.cpp)
AM_INIT_AUTOMAKE(libcgnsfile,0.1)
AM_MAINTAINER_MODE()

dnl Checks for programs.
AC_CANONICAL_HOST
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_RANLIB()
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

AC_LANG_CPLUSPLUS

AC_PATH_PROG(svnversioncommand, svnversion)
if test "X$svnversioncommand" = "X" || test `$svnversioncommand -n '.'` = "exported"; then
   svnver=`cat saved_svn_version.txt`     
else
   svnver=`$svnversioncommand -n '.' `
   echo "$svnver" > saved_svn_version.txt
fi
AC_DEFINE_UNQUOTED(CGNSFILE_SVN_REVISION, "$svnver", [svn repository reversion])

AC_PATH_PROG(svncommand, svn)
if test "X$svncommand" = "X"; then
    svnver=`cat saved_svn_version_date.txt`     
else 
    $svncommand info '.' > /dev/null
    if test $? = 0; then
        $svncommand info '.' | \
            $AWK '/Last Changed Date:/ {sub(/Last Changed Date: */, ""); print $0}' \
            > saved_svn_version_date.txt
    fi  
    svnver=`cat saved_svn_version_date.txt`   
fi
AC_DEFINE_UNQUOTED(CGNSFILE_SVN_REVISION_DATE, "$svnver", [svn repository date])
unset svnver

dnl Checks for system headers
AC_CHECK_HEADER(libgen.h, AC_DEFINE([HAVE_LIBGEN_H], [1]))

dnl variables to pass on to Makefile.in and config.h.in

AC_SUBST(CGNSINC)
AC_SUBST(CGNSLIB)
AC_SUBST(DEBUG)

dnl Process command-line arguments for configure

AC_ARG_WITH(cgns,
  [  --with-cgns=DIR              set the path for the CGNS library],
  CGNSINC="-I$withval -I$withval/include"
  CGNSLIB="-L$withval/lib",
  CGNSINC=""
  CGNSLIB="")
CPPFLAGS="$CGNSINC $CPPFLAGS"

cgns_lib_name=""
AC_ARG_WITH(cgns-lib,
    AC_HELP_STRING([--with-cgns-lib=name], [Specify the name of the cgns library (default="cgns")]),
    cgns_lib_name=$withval,
    cgns_lib_name="")
if test -z "$cgns_lib_name"; then 
    cgns_lib_name="cgns"
fi
CGNSLIB="$CGNSLIB  -l$cgns_lib_name"


# Optimization options need to be compiler dependant (when we actually
# use different compilers).  For gcc, the flags "-O2 -funroll-loops
# -fstrict-aliasing -fno-gcse" come from the Blitz++ distribution.
# "-funroll-loops" appears cause problems with either the Boost
# libraries or the GNU stdc++ libraries (SEGV's in traversal of a list
# of shared pointers), so we take it out.

AC_ARG_ENABLE(optimize,
  [  --enable-optimize            enable code optimization],
  DEBUG="-O2 -fstrict-aliasing -fno-gcse"
  CPPFLAGS="$CPPFLAGS -D_DO_INLINE_=inline -DNDEBUG", 
  DEBUG="-g")

AC_ARG_ENABLE(debug,
  [  --enable-debug               enable code debug (use with --enable-optimize)],
  DEBUG="$DEBUG -g")

AC_ARG_ENABLE(profiling,
  [  --enable-profiling           turn on code profiling],
  PROFILE="-pg", 
  PROFILE="")

# Checks for libraries.

AC_LANG_CPLUSPLUS

MY_CXX_FLAGS()

CXXFLAGS="$CXXFLAGS $MY_CXXFLAGS"

# Check the Boost Library

AX_BOOST_BASE(1.33)
AX_BOOST_PROGRAM_OPTIONS()
AX_BOOST_FILESYSTEM()
AX_BOOST_SYSTEM()
CPPFLAGS="$BOOST_CPPFLAGS  $CPPFLAGS"
LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"

# Check the CGNS header (and library)

AC_CHECK_HEADER(cgnslib.h, AC_DEFINE(HAVE_CGNS),
    AC_MSG_ERROR(Required CGNS library missing))

# Define documentation generation options

BB_ENABLE_DOXYGEN

dnl Checks for library functions.

OP_DOXYGEN_DOC

# AC_CONFIG_FILES([Makefile doc/Makefile doc/Doxyfile])
AC_CONFIG_FILES([Makefile])
AC_OUTPUT()
